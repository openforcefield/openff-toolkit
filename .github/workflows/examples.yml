name: Examples

on:
  push:
    branches:
      - "master"
      - "maintenance/.+"
  pull_request:
    branches:
      - "master"
      - "maintenance/.+"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    if: (github.event_name == 'schedule' && github.repository == 'openforcefield/openff-toolkit') || (github.event_name != 'schedule')
    name: ${{ matrix.os }}, Python ${{ matrix.python-version }}, RDKit=${{ matrix.rdkit }}, OpenEye=${{ matrix.openeye }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7]
        rdkit: [true, false]
        openeye: [true, false]
        exclude:
          - rdkit: false
            openeye: false
          - rdkit: true
            openeye: true

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      PACKAGE: openff
      PYTEST_ARGS: -r fE --tb=short --cov=openff --cov-config=setup.cfg --cov-append --cov-report=xml
      NB_ARGS: -v --nbval-lax --ignore=examples/deprecated

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set environment variables
        run: |
          if [[ ${{ matrix.openeye }} == true && ${{ matrix.rdkit }} == true ]]; then
              echo "ENVFILE=test_env" >> $GITHUB_ENV
          fi

          if [[ ${{ matrix.openeye }} == true && ${{ matrix.rdkit }} == false ]]; then
              echo "ENVFILE=openeye" >> $GITHUB_ENV
          fi

          if [[ ${{ matrix.openeye }} == false && ${{ matrix.rdkit }} == true ]]; then
              echo "ENVFILE=rdkit" >> $GITHUB_ENV
          fi

      - uses: conda-incubator/setup-miniconda@v2.1.1
        name: Install with only ${{env.ENVFILE}}
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          environment-file: devtools/conda-envs/${{env.ENVFILE}}.yaml
          auto-activate-base: false
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true
      
      - name: Install additional example dependencies
        run: |
          mamba env update --file examples/environment.yaml --name test

          # Remove rdkit if it is not being tested, as it is a dependency of openmmforcefields
          if [[ ${{ matrix.openeye }} == true ]]; then
            conda remove --force rdkit ambertools
          fi

      - name: Additional info about the build
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Make oe_license.txt file from GH org secret "OE_LICENSE"
        shell: bash
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}

      - name: Install package
        run: |
          # Remove the packaged openff-toolkit, installed as a dependency of openmmforcefields
          conda remove --force openff-toolkit-base
          python setup.py develop --no-deps

      - name: Environment Information
        run: |
          conda info
          conda list

      - name: Run example scripts
        run: |
          if [[ ${{ matrix.rdkit }} == false ]]; then
            PYTEST_ARGS+=" --ignore=examples/check_dataset_parameter_coverage"
            PYTEST_ARGS+=" --ignore=examples/QCArchive_interface"
          fi
          pytest $PYTEST_ARGS openff/toolkit/tests/test_examples.py

      - name: Run example notebooks
        run: |
          if [[ ${{ matrix.rdkit }} == false ]]; then
            NB_ARGS+=" --ignore=examples/QCArchive_interface"
            NB_ARGS+=" --ignore=examples/check_dataset_parameter_coverage"
            NB_ARGS+=" --ignore=examples/conformer_energies"
            NB_ARGS+=" --ignore=examples/using_smirnoff_in_amber_or_gromacs"
          fi
          pytest $NB_ARGS examples

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
