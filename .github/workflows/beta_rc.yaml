name: Weekly test against upstream beta and RC builds

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    name: Test beta and RC builds on on ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version:
          - 3.9

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      PYTEST_ARGS: -r fE --tb=short -nauto
      COV: --cov=openff/toolkit --cov-config=setup.cfg --cov-append --cov-report=xml

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install environment with ${{ env.JOBNAME }}
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: devtools/conda-envs/beta_rc_env.yaml
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Additional info about the build
        run: |
          uname -a
          df -h
          ulimit -a

      - name: Make oe_license.txt file from GH org secret "OE_LICENSE"
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}

      - name: Install package
        run: |
          micromamba remove --force openff-toolkit openff-toolkit-base
          python -m pip install .

      - name: Install test plugins
        run: |
          python -m pip install utilities/test_plugins

      - name: Environment Information
        run: |
          conda info
          conda list

      - name: Check links
        run: |
          pytest -r fE --tb=short openff/toolkit/_tests/test_links.py

      - name: Run mypy
        run: |
          mypy --namespace-packages -p "openff.toolkit"

      - name: Run unit tests
        run: |
          PYTEST_ARGS+=" --ignore=openff/toolkit/_tests/test_examples.py"
          PYTEST_ARGS+=" --ignore=openff/toolkit/_tests/test_links.py"
          PYTEST_ARGS+=" --runslow"
          pytest $PYTEST_ARGS $COV

      - name: Run code snippets in docs
        run: |
          pytest -v --doctest-glob="docs/*.rst" --doctest-glob="docs/*.md" docs/

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          fail_ci_if_error: true
