name: Tests against beta/RC builds

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 3 * * 0"
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  test:
    if: (github.event_name == 'schedule' && github.repository == 'openforcefield/openff-toolkit') || (github.event_name != 'schedule')
    name: Test beta/RC builds on ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      PYTEST_ARGS: -x -r fE --tb=short -nauto --durations=20
      COV: --cov=openff/toolkit --cov-config=setup.cfg --cov-append --cov-report=xml

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup conda environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: devtools/conda-envs/test_env.yaml
          condarc: |
            channels:
              - conda-forge/label/openmm_rc
              - conda-forge/label/mdtraj_rc
              - conda-forge/label/openff-toolkit_rc
              - conda-forge/label/openff-interchange_rc
              - openeye/label/rc
              - openeye
              - conda-forge
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Make oe_license.txt file from GH org secret "OE_LICENSE"
        env:
          OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
        run: |
          echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}

      - name: Install package and test plugins
        run: |
          micromamba remove --force openff-toolkit openff-toolkit-base
          python -m pip install . utilities/test_plugins/

      - name: Environment Information
        run: micromamba info && micromamba list && pip list

      - name: Check links
        run: pytest -r fE --tb=short openff/toolkit/_tests/test_links.py

      - name: Run mypy
        run: mypy -p "openff.toolkit"

      - name: Run unit tests
        run: |
          PYTEST_ARGS+=" --ignore=openff/toolkit/_tests/test_examples.py"
          PYTEST_ARGS+=" --ignore=openff/toolkit/_tests/test_links.py"
          PYTEST_ARGS+=" --runslow"
          pytest $PYTEST_ARGS

      - name: Run code snippets and notebooks in docs
        run: pytest $PYTEST_ARGS \
          --nbval-lax --dist loadscope \
          --doctest-glob="docs/*.rst" \
          --doctest-glob="docs/*.md" \
          --ignore docs/_build/ \
          docs/

      - name: Run examples in docstrings
        run: |
          pytest $PYTEST_ARGS openff/toolkit \
            --doctest-modules \
            --ignore-glob='openff/toolkit/_tests*' \
            --ignore=openff/toolkit/data/ \
            --ignore=openff/toolkit/utils/utils.py
