[build-system]
requires = ["setuptools", "versioneer[toml]"]
build-backend = "setuptools.build_meta"

[project]
name="openff-toolkit"
description = "openff-toolkit"
license = {text = "MIT"}
urls = {Homepage = "https://github.com/openforcefield/openff-toolkit"}
authors = [{name = "Open Force Field Consortium", email = "info@openforcefield.org"}]
keywords=["molecular mechanics", "force field", "parameterization",]
classifiers=[
    "Development Status :: 3 - Alpha",
    "Topic :: Utilities",
    "License :: OSI Approved :: MIT",
    'Programming Language :: Python :: 3',
]
readme = "README.md"
dynamic = ["version"]

[tool.setuptools.packages]
find = {}

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "openff/toolkit/_version.py"
versionfile_build = "openff/toolkit/_version.py"
tag_prefix = ""
# TODO: parentdir_prefix is left empty in the cookiecutter setup.cfg.
parentdir_prefix = "openff-toolkit-"

[tool.ruff]
line-length = 119
exclude = ["examples/deprecated/", "utilities/deprecated"]

[tool.ruff.lint]
ignore = ["E721","D105","D107","D200","D203","D212", "RUF012"]
select = ["I", "E", "F", "W", "NPY", "UP", "RUF"]

[tool.ruff.lint.per-file-ignores]
"openff/toolkit/**/__init__.py" = ["F401"]
"openff/toolkit/_version.py" = ["UP", "RUF"]
"openff/toolkit/_tests/**/*.py" = ["E501"]
"openff/toolkit/typing/engines/smirnoff.parameters.py" = ["RUF012"]
"openff/toolkit/_tests/_stale_tests.py" = ["F821"]
"docs/users/molecule_cookbook.ipynb" = ["F821", "E402"]
"examples/visualization/visualization.ipynb" = ["F821"]

[tool.ruff.lint.isort]
# can't find a clean way to get Rust's globset to handle this via regex ...
# https://docs.astral.sh/ruff/settings/#lint_isort_known-third-party
known-third-party = ["openff.interchange", "openff.utilities", "openff.units"]
known-first-party = ["openff.toolkit"]

[tool.pytest.ini_options]
doctest_optionflags = [
    "ELLIPSIS",
    "DONT_ACCEPT_TRUE_FOR_1",
    "NORMALIZE_WHITESPACE",
]
testpaths = [
    "openff/toolkit/_tests/",
]

[tool.coverage.run]
omit = [
    "*/*/_tests/*",
    "openff/toolkit/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "@overload",
]

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"
warn_unused_configs = true
warn_unused_ignores = true
warn_incomplete_stub = true
show_error_codes = true
exclude = "openff/toolkit/_tests/|openff/toolkit/data/"

[[tool.mypy.overrides]]
module = [
    "openff.units",
    "openff.units.*",
    "openff.nagl.*",
    "openff.nagl_models.*",
    "mdtraj",
    "openmm",
    "openmm.app",
    "openmm.unit",
    "rdkit",
    "rdkit.Chem",
    "rdkit.Chem.Draw",
    "rdkit.DataStructs.cDataStructs",
    "openeye",
    "openeye.oechem",
    "parmed",
    "msgpack",
    "qcelemental",
    "nglview",
    "nglview.base_adaptor",
    "cached_property",
    "constraint",
]
ignore_missing_imports = true
